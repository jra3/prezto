## -*- coding: utf-8;mode: sh; -*- ##

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/runcoms/.iterm2_shell_integration.zsh" ]]; then
    source "${ZDOTDIR:-$HOME}/.zprezto/runcoms/.iterm2_shell_integration.zsh"
fi

# define LOCAL_ADMIN_SCRIPTS in /etc/zshenv
local master_file="${LOCAL_ADMIN_SCRIPTS}/master.zshrc"
if [ -f "$master_file" ]; then
  source "$master_file"
fi

# my local hacky copy of local admin scripts for emacs hackery
# export LOCAL_ADMIN_SCRIPTS_DEV="$HOME/opsfiles/chef/cookbooks/secure/fb_shellserver_base/files/default/emacs"

# Number of current visible frames,
# Emacs daemon always has a visible frame called F1
visible_frames() {
  emacsclient -a "" -e '(length (visible-frame-list))'
}

## Focus on the first non-daemon frame
# without this, I'd open buffers in a non-visible frame and then not have the visited in my open one
change_focus() {
  emacsclient -n -e "(select-frame-set-input-focus (car (or (nthcdr 1 (visible-frame-list))))))" # > /dev/null
}

_emacsfun() {
    frames="$(visible_frames)"

    if [ $frames -lt  "2" ]; then # need to create a frame
        # works differently in X11 envs...
        if [ $DISPLAY ]; then
            # create a frame, but don't wait for it. It'll be X11
            emacsclient --no-wait --create-frame "$@"
        else
            # create an emacs frame interactively
            emacsclient --create-frame "$@"
        fi
    else # there is already a visible frame besides the daemon, so
        change_focus
        # supress error if no args passed
        test  "$#" -ne "0" && emacsclient -n "$@"
    fi
}

export WWW=/data/users/jallen/www-hg
alias www="cd $WWW"
alias e=_emacsfun
alias emacs=_emacsfun
alias eframe='emacsclient --alternate-editor "" --create-frame'
# ripgrep > silver searcher, but my fingers disagree
alias ag=rg

hhs() {
    hh_client --search $1 $WWW
}

# Open a Hack class in emacs
ec() {
    class=$1
    if [[ $1 =~ '^xhp_.*' ]]; then
        class=$( echo $1 | sed 's#^xhp_#:#' | sed 's#__#:#g' | sed 's#_#-#g' )
    fi
    cd $WWW && _emacsfun $( hh_client --search-class $class $WWW | cut -d\" -f2 | head -n 1 )
}

# Open an nt spec in emacs, given a style string
es() {
    style=$1
    class=$( cd $WWW && $WWW/scripts/nt/ntss $style )
    (cd $WWW && _emacsfun $( hh_client --search-class $class $WWW | cut -d\" -f2 | head -n 1 ))
}

# HACK for fblite janks
export JAVA_TOOL_OPTIONS="-Djava.net.preferIPv6Addresses=true"

export GOROOT=/usr/local/opt/go/libexec
export GOPATH=$HOME/go
export PATH=~/bin:$PATH:~/local/bin:$GOPATH/bin:$GOROOT/bin

export EMACS_DIR=~/.dot-emacs
export INPUTRC=~/.inputrc

EDITOR="emacsclient --tty"
HGMERGE="emacsclient --tty"
